Design

	The first thing I did was find the appropriate jquery and jquery mobile files that I would need to make the user interface, after which I laid out the skeleton of index.html which would organize the steps of the project. Jquery mobile has very pretty designs and convenient ways to implement things like collapsibles, dropdown menus, and the like. Oxidation reduction equation balancing apps have existed previously, and so what I wanted to improve upon previous ones was the user-friendliness, especially as a mobile application. It is a struggle to switch back and forth from letters to "+" signs and/or input charges with brackets around them on a mobile device. Hence, I made buttons to add reactants and products so the "+" and "->" show up automatically, and the user can select charge using a dropdown menu. My other main goal was to display the step-by-step solution so that users could see the process behind the answer. 
	
	Then I started writing control.js, which is the controller. At first, I had trouble figuring out a good way to organize the user inputted information and struggled to discover the awesome helpfulness of regular expressions to parse strings. Information about each reactant and product is stored meticulously because all of it is used to balance the equation. Each element is stored separately with its subscript. In the first step of balancing the equation, the equation must be split into two half reactions, and so I iterate through through each element in the reactants, ignoring H's and O's, to see which product also has that element. That reactant and that product then make up the first half reaction. To code it this way is significantly easier than how I was originally planning to split the reaction into half reactions. I had originally wanted to assign oxidation numbers to the reactants and see which one was oxidized and which one was reduced, but I realized that assigning oxidation numbers would require much larger knowledge of chemistry and understanding of all of the exceptions. 
	
	After that, for each half reaction, non H or O elements are balanced by taking the LCM of the subscripts of those elements. I found a really neat LCM function online from Nate Weiner, http://blog.ideashower.com/post/15147136549/leastgreatest-common-mulitple-lcmgcm-in-php-and-javascri. Then the appropriate number of H2O's, H+'s, and e-'s are added to balance the elements and charges. Next, the coefficients of the half equations are multiplied so that the electrons cancel out. 
	
	I decided to limit the scope of this project to balancing only reactions occurring in aqueous oslution, and not include synthesis, decomposition, and reactions including hydrogen peroxide, hydrogen gas, or oxygen gas. As my first independent-ish coding project ever, I struggled so much at the beginning that I didn't have time to figure out how I was logically going to include those, because the application is reliant on there being exactly two reactants and two products, and it would also ignore hydrogen peroxide, oxygen gas, and hydrogen gas. I also didn't have adequate time to figure out the best ways to organize my code, so right now the functions are somewhat alphabetical. There are also some redundant parts that would take quite amount of work to un-redundant-ify them, so I left them for now. I was unable to successfully use src to link control.js to index.html after many days of consulting people and websites, so I ended up pasting the the contents of control.js at the bottom of index.html in order to run the application in my browser for testing.
	
	I used PhoneGap Build to package my application for android, which is where my .apk file came from. I uploaded a zip file of my html, js, and css files to build.phonegap.com, and downloaded the .apk file that they produced for me, because my goal is to release my application on the play store, eventually.

	In the months to come, I plan make the application even more user friendly, and also work on including the things I excluded so far.